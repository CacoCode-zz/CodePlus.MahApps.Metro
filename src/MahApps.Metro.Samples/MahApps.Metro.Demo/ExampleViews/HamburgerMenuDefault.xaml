<UserControl x:Class="MetroDemo.ExampleViews.HamburgerMenuDefault"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:local="clr-namespace:MetroDemo"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             d:DataContext="{d:DesignInstance local:MainWindowViewModel}"
             d:DesignHeight="300"
             d:DesignWidth="400"
             mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>

            <!--  This is the template for all menu items. In this sample we use the glyph items.  -->
            <DataTemplate x:Key="HamburgerMenuItem" DataType="{x:Type mah:HamburgerMenuGlyphItem}">
                <DockPanel Height="48" LastChildFill="True">
                    <Grid x:Name="IconPart"
                          Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength}"
                          DockPanel.Dock="Left">
                        <Image Margin="12"
                               HorizontalAlignment="Center"
                               VerticalAlignment="Center"
                               Source="{Binding Glyph}" />
                    </Grid>
                    <TextBlock x:Name="TextPart"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </DockPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=PanePlacement}" Value="Right">
                        <Setter TargetName="IconPart" Property="DockPanel.Dock" Value="Right" />
                        <Setter TargetName="TextPart" Property="Margin" Value="8 0 0 0" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <!--  This is the template for the option menu item  -->
            <DataTemplate x:Key="HamburgerOptionsMenuItem" DataType="{x:Type mah:HamburgerMenuIconItem}">
                <DockPanel Height="48" LastChildFill="True">
                    <ContentControl x:Name="IconPart"
                                    Width="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=CompactPaneLength}"
                                    Content="{Binding Icon}"
                                    DockPanel.Dock="Left"
                                    Focusable="False"
                                    IsTabStop="False" />
                    <TextBlock x:Name="TextPart"
                               VerticalAlignment="Center"
                               FontSize="16"
                               Text="{Binding Label}" />
                </DockPanel>
                <DataTemplate.Triggers>
                    <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type mah:HamburgerMenu}}, Path=PanePlacement}" Value="Right">
                        <Setter TargetName="IconPart" Property="DockPanel.Dock" Value="Right" />
                        <Setter TargetName="TextPart" Property="Margin" Value="8 0 0 0" />
                    </DataTrigger>
                </DataTemplate.Triggers>
            </DataTemplate>

            <ObjectDataProvider x:Key="PanePlacementEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type mah:SplitViewPanePlacement}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="mah:SplitViewPanePlacement" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="DisplayModeEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type mah:SplitViewDisplayMode}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="mah:SplitViewDisplayMode" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

            <ObjectDataProvider x:Key="VisibilityEnumValues"
                                MethodName="GetValues"
                                ObjectType="{x:Type Visibility}">
                <ObjectDataProvider.MethodParameters>
                    <x:Type TypeName="Visibility" />
                </ObjectDataProvider.MethodParameters>
            </ObjectDataProvider>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="Auto" />
        </Grid.ColumnDefinitions>

        <ScrollViewer Grid.Column="1"
                      MinWidth="230"
                      Margin="10 10 5 10"
                      Padding="0 0 5 0"
                      HorizontalContentAlignment="Stretch"
                      HorizontalScrollBarVisibility="Disabled">
            <StackPanel Margin="0 0 0 10" Orientation="Vertical">
                <mah:ToggleSwitch Margin="0 10 0 5"
                                  Header="HamburgerMenuItem About:"
                                  IsOn="{Binding CanShowHamburgerAboutCommand, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  OffContent="Disabled"
                                  OnContent="Enabled" />

                <mah:ToggleSwitch Margin="0 10 0 5"
                                  Header="IsPaneOpen:"
                                  IsOn="{Binding IsHamburgerMenuPaneOpen, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <mah:ToggleSwitch Margin="0 10 0 5"
                                  Header="CanResizeOpenPane:"
                                  IsOn="{Binding ElementName=HamburgerMenuControl, Path=CanResizeOpenPane, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />

                <mah:MetroHeader Margin="0 10 0 5" Header="PanePlacement:">
                    <ComboBox MinWidth="150"
                              HorizontalAlignment="Left"
                              ItemsSource="{Binding Source={StaticResource PanePlacementEnumValues}}"
                              SelectedItem="{Binding ElementName=HamburgerMenuControl, Path=PanePlacement, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </mah:MetroHeader>

                <mah:MetroHeader Margin="0 10 0 5" Header="DisplayMode:">
                    <ComboBox MinWidth="150"
                              HorizontalAlignment="Left"
                              ItemsSource="{Binding Source={StaticResource DisplayModeEnumValues}}"
                              SelectedItem="{Binding ElementName=HamburgerMenuControl, Path=DisplayMode, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </mah:MetroHeader>

                <mah:MetroHeader Margin="0 10 0 5" Header="SelectedIndex:">
                    <Slider AutoToolTipPlacement="TopLeft"
                            Maximum="3"
                            Minimum="0"
                            Value="{Binding ElementName=HamburgerMenuControl, Path=SelectedIndex, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </mah:MetroHeader>

                <mah:MetroHeader Margin="0 10 0 5" Header="CompactPaneLength:">
                    <Slider AutoToolTipPlacement="TopLeft"
                            Maximum="80"
                            Minimum="10"
                            Value="{Binding ElementName=HamburgerMenuControl, Path=CompactPaneLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </mah:MetroHeader>

                <mah:MetroHeader Margin="0 10 0 5" Header="OpenPaneLength:">
                    <Slider AutoToolTipPlacement="TopLeft"
                            Maximum="400"
                            Minimum="50"
                            Value="{Binding ElementName=HamburgerMenuControl, Path=OpenPaneLength, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </mah:MetroHeader>

                <mah:MetroHeader Margin="0 10 0 5" Header="HamburgerVisibility:">
                    <ComboBox MinWidth="150"
                              HorizontalAlignment="Left"
                              ItemsSource="{Binding Source={StaticResource VisibilityEnumValues}}"
                              SelectedItem="{Binding ElementName=HamburgerMenuControl, Path=HamburgerVisibility, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                </mah:MetroHeader>

                <mah:MetroHeader Margin="0 10 0 5" Header="Hamburger Width / Height:">
                    <UniformGrid Columns="2">
                        <Slider Margin="0 0 5 0"
                                AutoToolTipPlacement="TopLeft"
                                Maximum="80"
                                Minimum="10"
                                Value="{Binding ElementName=HamburgerMenuControl, Path=HamburgerWidth, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        <Slider Margin="5 0 0 0"
                                AutoToolTipPlacement="TopLeft"
                                Maximum="80"
                                Minimum="10"
                                Value="{Binding ElementName=HamburgerMenuControl, Path=HamburgerHeight, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                    </UniformGrid>
                </mah:MetroHeader>
            </StackPanel>
        </ScrollViewer>

        <Border Grid.Column="0"
                Margin="10 10 0 10"
                BorderBrush="{DynamicResource MahApps.Brushes.Gray7}"
                BorderThickness="1">

            <mah:HamburgerMenu x:Name="HamburgerMenuControl"
                               DisplayMode="CompactOverlay"
                               HamburgerWidth="48"
                               IsPaneOpen="{Binding IsHamburgerMenuPaneOpen}"
                               ItemInvoked="HamburgerMenuControl_OnItemInvoked"
                               ItemTemplate="{StaticResource HamburgerMenuItem}"
                               OptionsItemTemplate="{StaticResource HamburgerOptionsMenuItem}"
                               SelectedIndex="1"
                               VerticalScrollBarOnLeftSide="False">
                <!--  Header  -->
                <mah:HamburgerMenu.HamburgerMenuHeaderTemplate>
                    <DataTemplate>
                        <TextBlock HorizontalAlignment="Center"
                                   VerticalAlignment="Center"
                                   FontSize="16"
                                   Foreground="White"
                                   Text="Pictures" />
                    </DataTemplate>
                </mah:HamburgerMenu.HamburgerMenuHeaderTemplate>
                <!--  Items  -->
                <mah:HamburgerMenu.ItemsSource>
                    <mah:HamburgerMenuItemCollection>
                        <mah:HamburgerMenuGlyphItem AutomationProperties.HelpText="First Item shows BigFourSummerHeat"
                                                    AutomationProperties.Name="First Item"
                                                    Glyph="/Assets/Photos/BigFourSummerHeat.png"
                                                    Label="Big four summer heat" />
                        <mah:HamburgerMenuGlyphItem Glyph="/Assets/Photos/BisonBadlandsChillin.png" Label="Bison badlands Chillin" />
                        <mah:HamburgerMenuGlyphItem Glyph="/Assets/Photos/GiantSlabInOregon.png" Label="Giant slab in Oregon" />
                        <mah:HamburgerMenuGlyphItem Glyph="/Assets/Photos/LakeAnnMushroom.png" Label="Lake Ann Mushroom" />
                    </mah:HamburgerMenuItemCollection>
                </mah:HamburgerMenu.ItemsSource>

                <!--  Options  -->
                <mah:HamburgerMenu.OptionsItemsSource>
                    <mah:HamburgerMenuItemCollection>

                        <mah:HamburgerMenuIconItem x:Name="AboutOption"
                                                   Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType=mah:HamburgerMenu}, Path=DataContext.ShowHamburgerAboutCommand}"
                                                   Label="About">
                            <mah:HamburgerMenuIconItem.Icon>
                                <iconPacks:PackIconMaterial Width="22"
                                                            Height="22"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Kind="Help" />
                            </mah:HamburgerMenuIconItem.Icon>
                            <mah:HamburgerMenuIconItem.Tag>
                                <TextBlock HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="28"
                                           FontWeight="Bold">
                                    About
                                </TextBlock>
                            </mah:HamburgerMenuIconItem.Tag>
                        </mah:HamburgerMenuIconItem>

                    </mah:HamburgerMenuItemCollection>
                </mah:HamburgerMenu.OptionsItemsSource>

                <!--  Content  -->
                <mah:HamburgerMenu.ContentTemplate>
                    <DataTemplate>
                        <Grid x:Name="ContentGrid">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="48" />
                                <RowDefinition />
                            </Grid.RowDefinitions>
                            <Border Grid.Row="0"
                                    Margin="-1 0 -1 0"
                                    Background="#7A7A7A">
                                <TextBlock x:Name="Header"
                                           HorizontalAlignment="Center"
                                           VerticalAlignment="Center"
                                           FontSize="24"
                                           Foreground="White"
                                           Text="{Binding Label}" />
                            </Border>
                            <mah:TransitioningContentControl Grid.Row="1"
                                                             Content="{Binding}"
                                                             RestartTransitionOnContentChange="True"
                                                             Transition="Default">
                                <mah:TransitioningContentControl.Resources>
                                    <DataTemplate DataType="{x:Type mah:HamburgerMenuGlyphItem}">
                                        <Image Source="{Binding Glyph, Mode=OneWay, Converter={mah:NullToUnsetValueConverter}}" />
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type mah:HamburgerMenuIconItem}">
                                        <ContentControl Content="{Binding Tag, Mode=OneWay}"
                                                        Focusable="True"
                                                        IsTabStop="False" />
                                    </DataTemplate>
                                </mah:TransitioningContentControl.Resources>
                            </mah:TransitioningContentControl>
                        </Grid>
                    </DataTemplate>
                </mah:HamburgerMenu.ContentTemplate>
            </mah:HamburgerMenu>

        </Border>
    </Grid>

</UserControl>